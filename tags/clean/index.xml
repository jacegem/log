<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Clean on LPP</title><link>https://blog.moro.kr/tags/clean/</link><description>Recent content in Clean on LPP</description><generator>Hugo -- 0.143.1</generator><language>ko-kr</language><lastBuildDate>Sat, 18 Jan 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.moro.kr/tags/clean/index.xml" rel="self" type="application/rss+xml"/><item><title>clean architecture</title><link>https://blog.moro.kr/pages/clean-architecture/</link><pubDate>Sat, 18 Jan 2025 00:00:00 +0000</pubDate><guid>https://blog.moro.kr/pages/clean-architecture/</guid><description>&lt;p>계층을 만들어서 호출 관계를 정한다.&lt;/p>
&lt;p>presentation ➡️ domain ➡️ data&lt;/p>
&lt;pre class="mermaid">stateDiagram-v2
direction LR
p: presentation
do: domain
d: data
p --&amp;gt; do
do --&amp;gt; p
do --&amp;gt; d
d --&amp;gt; do
&lt;/pre>
&lt;p>presentation 계층은, controller, state, view 로 나눈다.&lt;/p>
&lt;p>domain 계층은, entity, flow, repository 로 나눈다.&lt;/p>
&lt;p>data 계층은, access, model 로 나눈다.&lt;/p>
&lt;p>(몇 가지 용어는 파일명을 구분하기 위해 변경해서 사용함)&lt;/p>
&lt;p>간단한 흐름은 다음과 같다.&lt;/p>
&lt;pre class="mermaid">stateDiagram-v2
direction LR
state presentation {
v: view
c: controller
}
state domain {
f: flow
r: repository
}
state data {
a: access
}
db: DB
v --&amp;gt; c
c --&amp;gt; v: state
c --&amp;gt; f
f --&amp;gt; c: entity
f --&amp;gt; r
r --&amp;gt; f: model
r --&amp;gt; a
a --&amp;gt; r: model
a --&amp;gt; db
db --&amp;gt; a
&lt;/pre>
&lt;h2 id="refs">Refs&lt;/h2>
&lt;p>&lt;a href="https://k-elon.tistory.com/38">https://k-elon.tistory.com/38&lt;/a>&lt;/p></description></item></channel></rss>